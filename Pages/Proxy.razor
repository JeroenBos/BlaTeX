@page "/proxy"
@inject HttpClient Http
@inject IJSRuntime JS


<h3>This component demonstrates calling JS from .NET. </h3>
<input value="c = \pm \sqrt{a^2 + b^2}"
    @oninput="@((ChangeEventArgs __e) => onInputChanged((string)__e.Value))" />
    
<p></p>
@if (rendered == null) {
    <div>Loading...</div>
}
else {
    <div>@rendered.Value</div>
}

@code {
    private MarkupString? rendered;

    private async Task onInputChanged(string value)
    {
        rendered = null;
        this.rendered = await Render(value);
    }

    private async Task<MarkupString> Render(string math)
    {
        return (MarkupString)await JS.InvokeAsync<string>("katex.renderToString", math);
    }
}
